<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Student Routine</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 20px;
        background-color: #fef6fb;
      }

      h1 {
        text-align: center;
        color: #333;
        text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
      }

      #currentDateTime {
        text-align: center;
        margin-bottom: 20px;
      }

      #routineForm {
        margin-top: 20px;
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }

      label {
        font-weight: bold;
        display: block;
        margin-bottom: 5px;
      }

      input[type="time"] {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        box-sizing: border-box;
        border: 1px solid #ccc;
        border-radius: 5px;
      }

      input[type="submit"] {
        background-color: #4caf50;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
      }

      input[type="submit"]:hover {
        background-color: #45a049;
      }

      table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }

      th,
      td {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 12px;
      }

      th {
        background-color: #f2f2f2;
      }
    </style>
  </head>

  <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <div class="container">
        <a class="navbar-brand" href="#">Student Dashboard</a>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarSupportedContent"
          aria-controls="navbarSupportedContent"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item">
              <a class="nav-link" href="/">Home</a>
            </li>
            <li class="nav-item">
              <a
                class="nav-link active"
                aria-current="page"
                href="/student/routine"
                >Add Task</a
              >
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/student/current_routine"
                >Current Routine</a
              >
            </li>
            
            <li class="nav-item">
              <a class="nav-link" href="/student/track_study_hour"
                >Tracking Study Hour</a
              >
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <div class="container">
      <h1>Student Routine</h1>
      <div id="currentDateTime">
        <p>Date: <span id="currentDate"></span></p>
        <p>Day: <span id="currentDay"></span></p>
        <p>Current Time <span id="currentTime"></span></p>
      </div>
      <form id="routineForm">
        <label for="startTime">Start Time:</label>
        <input type="time" id="startTime" name="startTime" required />
        <label for="endTime">End Time:</label>
        <input type="time" id="endTime" name="endTime" required />
        <label for="taskName">Task Name:</label>
        <input type="text" id="taskName" name="taskName" required />
        <input type="submit" value="Add to Routine" />
      </form>
      <h1>Your Current Routine</h1>
      <table id="routineTable">
        <tr>
          <th>Start Time</th>
          <th>End Time</th>
          <th>Task Name</th>
        </tr>
        <!-- Render initial tasks here -->
        <% tasks.forEach(task=> { %>
        <tr>
          <td><%= task.start_time %></td>
          <td><%= task.end_time %></td>
          <td><%= task.task_name %></td>
        </tr>
        <% }); %>
      </table>
      <input type="button" value="Done" id="doneButton" />

      <script>
        function updateDateTime() {
            const now = new Date();
            const options = {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            };
            document.getElementById('currentDate').textContent = now.toLocaleDateString('en-US', options);
            document.getElementById('currentDay').textContent = now.toLocaleDateString('en-US', {
                weekday: 'long'
            });
            document.getElementById('currentTime').textContent = now.toLocaleTimeString('en-US');
        }
    
        document.getElementById('routineForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const startTimeInput = document.getElementById('startTime');
            const endTimeInput = document.getElementById('endTime');
            const taskName = document.getElementById('taskName').value;
    
            const startTime = startTimeInput.value;
            const endTime = endTimeInput.value;
    
            // Add the task to the routine table
            const routineTable = document.getElementById('routineTable');
            const newRow = routineTable.insertRow(-1);
            const startTimeCell = newRow.insertCell(0);
            const endTimeCell = newRow.insertCell(1);
            const taskNameCell = newRow.insertCell(2);
    
            startTimeCell.textContent = startTime;
            endTimeCell.textContent = endTime;
            taskNameCell.textContent = taskName;
    
            // Clear form fields after submission
            document.getElementById('taskName').value = '';
        });
    
        document.getElementById('doneButton').addEventListener('click', function (event) {
            event.preventDefault();
    
            const routineTable = document.getElementById('routineTable');
            const tasks = [];
    
            // Iterate through table rows (excluding header)
            for (let i = 1; i < routineTable.rows.length; i++) {
                const row = routineTable.rows[i];
                const startTime = row.cells[0].textContent;
                const endTime = row.cells[1].textContent;
                const taskName = row.cells[2].textContent;
                tasks.push({
                    startTime,
                    endTime,
                    taskName
                });
            }
    
            // Send data to backend
            fetch('/student/routine', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    tasks: tasks
                })
            })
                .then(response => response.json()) // Parse the response as JSON
                .then(data => {
                    if (data.success) {
                        console.log('Tasks sent successfully.');
                        updateTable(data.tasks); // Update table with new data
                    } else {
                        alert(data.message);
                        updateTable(data.tasks);
                        //handleErrorResponse(data.message); // Handle error response
                    }
                })
                .catch(error => {
                    console.error('Error sending tasksssssssssss:', error);
                    alert(error);
                    //window.location.href('/student/routine');
                    //handleErrorResponse(null); // Handle error
                });
        });
    
        function updateTable(newTasks) {
            const routineTable = document.getElementById('routineTable');
            // Clear the existing tasks in the table
            routineTable.innerHTML = `<tr>
                                            <th>Start Time</th>
                                            <th>End Time</th>
                                            <th>Task Name</th>
                                        </tr>`;
            // Render the updated tasks in the table
            newTasks.forEach(task => {
                const newRow = routineTable.insertRow(-1);
                const startTimeCell = newRow.insertCell(0);
                const endTimeCell = newRow.insertCell(1);
                const taskNameCell = newRow.insertCell(2);
    
                startTimeCell.textContent = task.start_time;
                endTimeCell.textContent = task.end_time;
                taskNameCell.textContent = task.task_name;
            });
        }
    
        function handleErrorResponse(errorMessage) {
    console.error('Failed to send tasks.');
    if (errorMessage) {
        alert(errorMessage); // Display the error message
    } else {
        alert('An error occurred while sending tasks.');
    }
    // Restore previous tasks in the table
    restorePreviousTasks();
}

function restorePreviousTasks() {
    const routineTable = document.getElementById('routineTable');
    const tasks = [];
    // Iterate through table rows (excluding header)
    for (let i = 1; i < routineTable.rows.length; i++) {
        const row = routineTable.rows[i];
        const startTime = row.cells[0].textContent;
        const endTime = row.cells[1].textContent;
        const taskName = row.cells[2].textContent;
        tasks.push({
            startTime,
            endTime,
            taskName
        });
    }
    // Render the previous tasks in the table
    updateTable(tasks);
}
    
        // Update date and time every second
        updateDateTime();
        setInterval(updateDateTime, 1000);
    </script>
        <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"
      integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
