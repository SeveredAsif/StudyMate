<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        /* Chat container */
        .chat-container {
            max-width: 600px;
            margin: auto;
            padding: 20px;
        }

       

        /* Message input */
        .message-input {
            width: calc(100% - 80px);
            border-radius: 20px;
            padding: 10px 15px;
            border: 1px solid #ccc;
        }

        /* Send button */
        .send-button {
            width: 80px;
            border-radius: 20px;
            border: none;
            background-color: #0084ff;
            color: white;
        }

        .input-group {
            margin-bottom: 20px;
        }

        .message-container {
            display: flex;
            justify-content: flex-start;
            align-items: flex-start;
        }

        .message-container .message {
            margin: 5px;
            padding: 10px;
            border-radius: 10px;
        }

        .message-container .sender-message {
            align-self: flex-end;
            background-color: #e0e5e9;
            color: rgb(16, 14, 14);
        }

        .message-container .receiver-message {
            align-self: flex-start;
            background-color: #e91857;
            color: rgb(16, 14, 14);
        }
    </style>
</head>

<body>
    <!-- Include Bootstrap and Font Awesome JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
    <div class="chat-container">
        <h1>Chat</h1>

        <!-- Message container -->
        <div id="messageContainer"></div>

        <!-- Message input and send button -->
        <form id="messageForm" class="mt-3">
            <div class="input-group">
                <input type="text" id="messageInput" class="form-control message-input" placeholder="Type your message...">
                <button type="submit" class="btn btn-primary send-button"><i class="fas fa-paper-plane"></i></button>
            </div>
        </form>
    </div>

    <!-- Custom JavaScript for auto-refreshing messages -->
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const messageContainer = document.getElementById('messageContainer');
            const studentId = '<%= studentId %>'; // Get the guideline giver ID from EJS

            async function fetchAndRenderMessages() {
                try {
                    const response = await fetch(`/open-chat/${studentId}`);
                    if (response.ok) {
                        const data = await response.json();
                        renderMessages(data.messages);
                    } else {
                        console.error('Failed to fetch messages:', response.statusText);
                    }
                } catch (error) {
                    console.error('Error fetching messages:', error);
                }
            }

            function renderMessages(messages) {
                messageContainer.innerHTML = ''; // Clear existing messages

                messages.forEach(message => {
                    const messageElement = document.createElement('div');
                    messageElement.classList.add('message-container');
                    messageElement.innerHTML = `
                        <div class="message ${message.sender_role === 'receiver' ? 'receiver-message' : 'sender-message'}">
                            ${message.message_text}
                        </div>
                    `;
                    messageContainer.appendChild(messageElement);
                });
            }

            // Fetch and render messages initially
            fetchAndRenderMessages();

            // Set interval to fetch and render messages every 5 seconds
            setInterval(fetchAndRenderMessages, 5000);

            // Handle message form submission
            const messageForm = document.getElementById('messageForm');
            messageForm.addEventListener('submit', async (event) => {
                event.preventDefault();
                const messageInput = document.getElementById('messageInput');
                const message = messageInput.value;

                const response = await fetch(`/open-chat/${studentId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ message: message })
                });

                if (response.ok) {
                    messageInput.value = ''; // Clear input after sending
                    // Fetch and render messages after sending
                    fetchAndRenderMessages();
                }
            });
        });
    </script>
</body>

</html>
